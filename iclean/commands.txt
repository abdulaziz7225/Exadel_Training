Command Reference
################

# Install celery
    pip install celery

#Install RabbitMQ (Ubuntu Linux 20.04LTS)
    sudo apt-get install rabbitmq-server

# Run Celery
    celery -A NAMEOFINSTANCE worker --loglevel=info

    celery -A iclean worker --loglevel=info
    # OR
    celery -A iclean worker -l info 

    [Windows OS]
    celery -A iclean worker -l info --pool=solo
    # OR
    pip install gevent
    celery -A iclean worker -l info -P gevent 
# Run RabbitMQ (On Windows)

Run:
C:\Program Files\"RabbitMQ Server"\rabbitmq_server-3.10.4\sbin\rabbitmq-server.bat

#Run First Task
    py manage.py shell
    from .requests.tasks import add
    add.delay(2, 2)

    or

    add.apply_async((2, 2), countdown=5)

#Useful commands
    #Show message on completion of task
        logger.info("Sent review email")



###############################
Working with Flower
===============================

Windows Work Around
#####
C:\App_Caches\JetBrains\'PyCharm Projects'\Exadel_Training>env\lib\site-packages\tornado\platform\asyncio.py

import sys

if sys.platform == 'win32':
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

Start Flower
#####
celery --app iclean flower --port=5566


###############################
django-celery-beat
===============================

celery -A iclean beat -l INFO  # For deeper logs use DEBUG
celery -A iclean worker -B -l INFO

You can also embed beat inside the worker by enabling the workers -B option


Database scheduler
celery -A iclean beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
###############################